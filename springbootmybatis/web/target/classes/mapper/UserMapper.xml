<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ultra.web.model.UserMapper">
  <resultMap id="BaseResultMap" type="com.ultra.web.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
  </resultMap>


  <resultMap id="UserMap" type="com.ultra.web.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result property="name" column="name" jdbcType="VARCHAR" />
    <!--封装映射company表数据，user表与company表1对1关系，配置1对1的映射
        association:用于配置1对1的映射
                    属性property：company对象在user对象中的属性名
                    属性javaType：company属性的java对象 类型
                    属性column：user表中的外键引用company表
    -->
    <association property="company" javaType="com.ultra.web.model.Company" column="company_id">
      <id property="id" column="companyid"></id>
      <result property="companyName" column="companyname"></result>
    </association>
    <!--配置1对多关系映射
        property：在user里面的List<Account>的属性名
        ofType:当前account表的java类型
        column:外键
    -->
    <collection property="accounts" ofType="com.ultra.web.model.Account" column="user_id">
      <id property="id" column="accountid"></id>
      <result property="accountName" column="accountname"></result>
    </collection>
  </resultMap>

  <select id="getAllByXml" resultMap="UserMap"  >
    SELECT
    u.id,u.name,c.id companyid, c.name companyname, a.id accountid,a.name accountname
    FROM user u
    LEFT JOIN company c on u.company_id=c.id
    LEFT JOIN account a on u.id=a.user_id
  </select>



  <sql id="Base_Column_List">
    id, name, company_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ultra.web.model.User" useGeneratedKeys="true" keyProperty="id">
    insert into user (id, name, company_id
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ultra.web.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ultra.web.model.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ultra.web.model.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>